{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-17T01:13:59.723Z",
    "end": "2021-02-17T01:13:59.818Z",
    "duration": 95,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1360025e-57e5-4ce2-9358-2e1cfb5aa3cc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b51fa85-42c1-417c-831e-e65d724ba8da",
          "title": "Node-Memcached Integration tests",
          "fullFile": "/Users/esteban/node-memcached/server/test/integration.test.js",
          "file": "/test/integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "SET a new record and return STORED",
              "fullTitle": "Node-Memcached Integration tests SET a new record and return STORED",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.set(testParameters.key, testParameters.initialValue, 900);\n_chai.assert.equal(response, true);",
              "err": {},
              "uuid": "b30baa59-3664-434a-aaa3-f24265756fea",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET the previously created record and match the value",
              "fullTitle": "Node-Memcached Integration tests GET the previously created record and match the value",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.get(testParameters.key);\n_chai.assert.equal(response, testParameters.initialValue);",
              "err": {},
              "uuid": "290cf8f7-eff5-4698-9c9b-ce99f3f841f9",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GETS the previously created record match the value and store uniqueCas for later",
              "fullTitle": "Node-Memcached Integration tests GETS the previously created record match the value and store uniqueCas for later",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.gets(testParameters.key);\ntestParameters.uniqueCas = response.cas;\n_chai.assert.equal(response[testParameters.key], testParameters.initialValue);",
              "err": {},
              "uuid": "a330cd42-ff06-4c2a-9a3e-7bac57891519",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CAS the previously created record",
              "fullTitle": "Node-Memcached Integration tests CAS the previously created record",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.cas(testParameters.key, testParameters.casValueInsert, testParameters.uniqueCas, 900);\nconst checkup = await client.get(testParameters.key);\n_chai.assert.ok(response);\n_chai.assert.equal(checkup, testParameters.casValueInsert);",
              "err": {},
              "uuid": "b462ef28-4635-41bf-9412-1b54baaec5db",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ADD a new record",
              "fullTitle": "Node-Memcached Integration tests ADD a new record",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.add(testParameters.addKey, testParameters.addValue, 900);\nconst checkup = await client.get(testParameters.addKey);\n_chai.assert.ok(response);\n_chai.assert.equal(checkup, testParameters.addValue);",
              "err": {},
              "uuid": "88b42571-167d-4845-ae53-b5be6aeb0927",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "REPLACE an old record",
              "fullTitle": "Node-Memcached Integration tests REPLACE an old record",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await client.replace(testParameters.addKey, testParameters.replaceValue, 900);\nconst checkup = await client.get(testParameters.addKey);\n_chai.assert.ok(response);\n_chai.assert.equal(checkup, testParameters.replaceValue);",
              "err": {},
              "uuid": "2968e212-9aa5-4156-b75f-223aba3ffe9b",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "APPEND value to a record",
              "fullTitle": "Node-Memcached Integration tests APPEND value to a record",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await client.set('echidna', 'fizz', 900);\nclient.append('echidna', 'buzz').then(async () => {\n  const checkup = await client.get('echidna');\n  _chai.assert.equal(checkup, 'fizzbuzz');\n});",
              "err": {},
              "uuid": "bcba62e0-1844-4088-a99f-8a6fecb914af",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PREPEND value to a record",
              "fullTitle": "Node-Memcached Integration tests PREPEND value to a record",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await client.set('carpincho', 'bara', 900);\nclient.prepend('carpincho', 'capy').then(async () => {\n  const checkup = await client.get('carpincho');\n  _chai.assert.equal(checkup, 'capybara');\n});",
              "err": {},
              "uuid": "3dcd347a-85b5-4514-95b6-ea61e335d75a",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE a record",
              "fullTitle": "Node-Memcached Integration tests DELETE a record",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await client.set('dead', 'soon', 900);\nconst before = await client.get('dead');\nclient.del('dead').then(async () => {\n  const after = await client.get('dead');\n  _chai.assert.notEqual(before, after);\n});",
              "err": {},
              "uuid": "7d5304fd-5d18-4b26-893c-3d76730c43b0",
              "parentUUID": "3b51fa85-42c1-417c-831e-e65d724ba8da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b30baa59-3664-434a-aaa3-f24265756fea",
            "290cf8f7-eff5-4698-9c9b-ce99f3f841f9",
            "a330cd42-ff06-4c2a-9a3e-7bac57891519",
            "b462ef28-4635-41bf-9412-1b54baaec5db",
            "88b42571-167d-4845-ae53-b5be6aeb0927",
            "2968e212-9aa5-4156-b75f-223aba3ffe9b",
            "bcba62e0-1844-4088-a99f-8a6fecb914af",
            "3dcd347a-85b5-4514-95b6-ea61e335d75a",
            "7d5304fd-5d18-4b26-893c-3d76730c43b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 66,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "./test/results/mochawesome"
      },
      "version": "5.1.0"
    }
  }
}