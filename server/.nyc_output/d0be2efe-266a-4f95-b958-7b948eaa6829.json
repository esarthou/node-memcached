{"/Users/esteban/node-memcached/server/src/server.js":{"path":"/Users/esteban/node-memcached/server/src/server.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":49}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":57}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},"7":{"start":{"line":16,"column":62},"end":{"line":16,"column":166}},"8":{"start":{"line":16,"column":176},"end":{"line":16,"column":193}},"9":{"start":{"line":16,"column":196},"end":{"line":16,"column":207}},"10":{"start":{"line":18,"column":21},"end":{"line":18,"column":26}},"11":{"start":{"line":19,"column":21},"end":{"line":19,"column":32}},"12":{"start":{"line":20,"column":15},"end":{"line":20,"column":36}},"13":{"start":{"line":24,"column":4},"end":{"line":49,"column":7}},"14":{"start":{"line":26,"column":6},"end":{"line":26,"column":76}},"15":{"start":{"line":28,"column":6},"end":{"line":40,"column":9}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":77}},"17":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"18":{"start":{"line":32,"column":32},"end":{"line":32,"column":74}},"19":{"start":{"line":33,"column":10},"end":{"line":35,"column":13}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":44}},"21":{"start":{"line":37,"column":10},"end":{"line":37,"column":73}},"22":{"start":{"line":38,"column":10},"end":{"line":38,"column":36}},"23":{"start":{"line":42,"column":6},"end":{"line":44,"column":9}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":94}},"25":{"start":{"line":46,"column":6},"end":{"line":48,"column":9}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":96}},"27":{"start":{"line":51,"column":4},"end":{"line":51,"column":23}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":38}},"29":{"start":{"line":56,"column":4},"end":{"line":56,"column":45}},"30":{"start":{"line":57,"column":4},"end":{"line":57,"column":45}},"31":{"start":{"line":58,"column":4},"end":{"line":58,"column":67}},"32":{"start":{"line":59,"column":4},"end":{"line":61,"column":7}},"33":{"start":{"line":60,"column":6},"end":{"line":60,"column":73}},"34":{"start":{"line":70,"column":4},"end":{"line":105,"column":5}},"35":{"start":{"line":71,"column":6},"end":{"line":104,"column":7}},"36":{"start":{"line":73,"column":10},"end":{"line":73,"column":58}},"37":{"start":{"line":73,"column":37},"end":{"line":73,"column":56}},"38":{"start":{"line":76,"column":10},"end":{"line":76,"column":59}},"39":{"start":{"line":76,"column":37},"end":{"line":76,"column":57}},"40":{"start":{"line":79,"column":10},"end":{"line":79,"column":61}},"41":{"start":{"line":79,"column":37},"end":{"line":79,"column":59}},"42":{"start":{"line":82,"column":10},"end":{"line":82,"column":78}},"43":{"start":{"line":85,"column":10},"end":{"line":85,"column":78}},"44":{"start":{"line":88,"column":10},"end":{"line":88,"column":82}},"45":{"start":{"line":91,"column":10},"end":{"line":91,"column":81}},"46":{"start":{"line":94,"column":10},"end":{"line":94,"column":82}},"47":{"start":{"line":97,"column":10},"end":{"line":97,"column":78}},"48":{"start":{"line":100,"column":10},"end":{"line":100,"column":54}},"49":{"start":{"line":103,"column":10},"end":{"line":103,"column":27}},"50":{"start":{"line":107,"column":4},"end":{"line":107,"column":28}},"51":{"start":{"line":112,"column":0},"end":{"line":112,"column":25}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"_defineProperty","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":42},"end":{"line":16,"column":209}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":16},"end":{"line":53,"column":3}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":46},"end":{"line":24,"column":47}},"loc":{"start":{"line":24,"column":56},"end":{"line":49,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":24},"end":{"line":28,"column":25}},"loc":{"start":{"line":28,"column":32},"end":{"line":40,"column":7}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":32},"end":{"line":33,"column":33}},"loc":{"start":{"line":33,"column":44},"end":{"line":35,"column":11}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":25},"end":{"line":42,"column":26}},"loc":{"start":{"line":42,"column":31},"end":{"line":44,"column":7}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":25},"end":{"line":46,"column":26}},"loc":{"start":{"line":46,"column":34},"end":{"line":48,"column":7}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":17},"end":{"line":62,"column":3}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":45},"end":{"line":59,"column":46}},"loc":{"start":{"line":59,"column":51},"end":{"line":61,"column":5}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":69,"column":21},"end":{"line":108,"column":3}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":73,"column":30},"end":{"line":73,"column":31}},"loc":{"start":{"line":73,"column":37},"end":{"line":73,"column":56}},"line":73},"12":{"name":"(anonymous_12)","decl":{"start":{"line":76,"column":30},"end":{"line":76,"column":31}},"loc":{"start":{"line":76,"column":37},"end":{"line":76,"column":57}},"line":76},"13":{"name":"(anonymous_13)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":37},"end":{"line":79,"column":59}},"line":79}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},"type":"if","locations":[{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},{"start":{"line":16,"column":44},"end":{"line":16,"column":195}}],"line":16},"3":{"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":44}},"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":28}},{"start":{"line":56,"column":32},"end":{"line":56,"column":44}}],"line":56},"4":{"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":44}},"type":"binary-expr","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":28}},{"start":{"line":57,"column":32},"end":{"line":57,"column":44}}],"line":57},"5":{"loc":{"start":{"line":70,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":105,"column":5}},{"start":{"line":70,"column":4},"end":{"line":105,"column":5}}],"line":70},"6":{"loc":{"start":{"line":71,"column":6},"end":{"line":104,"column":7}},"type":"switch","locations":[{"start":{"line":72,"column":8},"end":{"line":73,"column":58}},{"start":{"line":75,"column":8},"end":{"line":76,"column":59}},{"start":{"line":78,"column":8},"end":{"line":79,"column":61}},{"start":{"line":81,"column":8},"end":{"line":82,"column":78}},{"start":{"line":84,"column":8},"end":{"line":85,"column":78}},{"start":{"line":87,"column":8},"end":{"line":88,"column":82}},{"start":{"line":90,"column":8},"end":{"line":91,"column":81}},{"start":{"line":93,"column":8},"end":{"line":94,"column":82}},{"start":{"line":96,"column":8},"end":{"line":97,"column":78}},{"start":{"line":99,"column":8},"end":{"line":100,"column":54}},{"start":{"line":102,"column":8},"end":{"line":103,"column":27}}],"line":71}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":3,"17":3,"18":3,"19":3,"20":3,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":3,"35":3,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"f":{"0":3,"1":1,"2":1,"3":1,"4":3,"5":3,"6":0,"7":0,"8":1,"9":1,"10":3,"11":1,"12":1,"13":0},"b":{"0":[2,1],"1":[3,3],"2":[0,1],"3":[1,0],"4":[1,0],"5":[3,0],"6":[1,1,0,1,0,0,0,0,0,0,0]},"inputSourceMap":{"version":3,"sources":["server.js"],"names":["DEFAULT_PORT","DEFAULT_HOST","parser","Parser","Server","constructor","socket","console","log","remoteAddress","remotePort","on","data","responseArray","handleCommand","translate","forEach","response","write","error","server","cache","Cache","start","options","port","host","net","createServer","clientConnection","listen","req","command","keys","map","key","get","gets","delete","set","value","exptime","flags","add","replace","append","prepend","cas","JSON","stringify","stats"],"mappings":"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","sourceRoot":"/Users/esteban/node-memcached/server/src/","sourcesContent":["import net from 'net';\nimport Parser from './parser';\nimport Cache from './cache';\n\nconst DEFAULT_PORT = 11111;\nconst DEFAULT_HOST = 'localhost';\n\nconst parser = new Parser();\nexport default class Server {\n    constructor() {\n        this.server = null;\n        this.cache = new Cache();\n    }\n\n    start(options) {\n        this.port = options.port || DEFAULT_PORT;\n        this.host = options.host || DEFAULT_HOST;\n        this.server = net.createServer(this.clientConnection);\n        this.server.listen(this.port, this.host, () => {\n            console.log(`Server started on port ${this.port} at ${this.host}`);\n        });\n    }\n\n    clientConnection = (socket) => {\n        // Log when a client connnects.\n        console.log(`${socket.remoteAddress}:${socket.remotePort} Connected`);\n        // Listen for messages passed through the connection\n        socket.on('data', (data) => {\n            console.log(`${socket.remoteAddress}:${socket.remotePort} ${data} `);\n            // TODO: Here's where the magic happens.\n            try {\n                const responseArray = this.handleCommand(parser.translate(data));\n                responseArray.forEach((response) => {\n                    socket.write(`${response}\\r\\n`);\n                });\n            } catch (error) {\n                console.error(`Internal server error, please debug: ${error}`);\n                socket.write('ERROR\\r\\n');\n            }\n        });\n        // Handle client connection termination.\n        socket.on('close', () => {\n            console.log(`${socket.remoteAddress}:${socket.remotePort} Terminated the connection`);\n        });\n        // Handle Client connection error.\n        socket.on('error', (error) => {\n            console.error(`${socket.remoteAddress}:${socket.remotePort} Connection Error ${error}`);\n        });\n    }\n\n    /**\n     * method router\n     * @param {object} request payload\n     * @returns {array}\n     */\n    handleCommand(req) {\n        if (req) {\n            switch (req.command) {\n            case 'get':\n                return req.keys.map((key) => this.cache.get(key));\n            case 'gets':\n                return req.keys.map((key) => this.cache.gets(key));\n            case 'delete':\n                return req.keys.map((key) => this.cache.delete(key));\n            case 'set':\n                return [this.cache.set(req.key, req.value, req.exptime, req.flags)];\n            case 'add':\n                return [this.cache.add(req.key, req.value, req.exptime, req.flags)];\n            case 'replace':\n                return [this.cache.replace(req.key, req.value, req.exptime, req.flags)];\n            case 'append':\n                return [this.cache.append(req.key, req.value, req.exptime, req.flags)];\n            case 'prepend':\n                return [this.cache.prepend(req.key, req.value, req.exptime, req.flags)];\n            case 'cas':\n                return [this.cache.cas(req.key, req.value, req.exptime, req.flags)];\n            case 'stats':\n                return [JSON.stringify(this.cache.stats())];\n            default:\n                return ['ERROR'];\n            }\n        } return ['CLIENT_ERROR'];\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6a00627b89fdc3861a0cec319769c5421c2ca397","contentHash":"3c23f81874fa89444e2de0b7004657354eb9cb6039f4b1397e3a59a90d9c4e09"},"/Users/esteban/node-memcached/server/src/parser.js":{"path":"/Users/esteban/node-memcached/server/src/parser.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},"5":{"start":{"line":12,"column":62},"end":{"line":12,"column":166}},"6":{"start":{"line":12,"column":176},"end":{"line":12,"column":193}},"7":{"start":{"line":12,"column":196},"end":{"line":12,"column":207}},"8":{"start":{"line":16,"column":4},"end":{"line":42,"column":7}},"9":{"start":{"line":17,"column":6},"end":{"line":38,"column":7}},"10":{"start":{"line":20,"column":12},"end":{"line":22,"column":10}},"11":{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},"12":{"start":{"line":25,"column":28},"end":{"line":25,"column":61}},"13":{"start":{"line":25,"column":51},"end":{"line":25,"column":60}},"14":{"start":{"line":26,"column":10},"end":{"line":28,"column":14}},"15":{"start":{"line":29,"column":10},"end":{"line":29,"column":23}},"16":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"17":{"start":{"line":33,"column":10},"end":{"line":33,"column":136}},"18":{"start":{"line":34,"column":10},"end":{"line":34,"column":23}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":20}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":65}},"21":{"start":{"line":41,"column":6},"end":{"line":41,"column":19}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":24}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"24":{"start":{"line":46,"column":4},"end":{"line":46,"column":19}},"25":{"start":{"line":47,"column":4},"end":{"line":47,"column":28}},"26":{"start":{"line":51,"column":37},"end":{"line":51,"column":75}},"27":{"start":{"line":52,"column":4},"end":{"line":52,"column":46}},"28":{"start":{"line":56,"column":18},"end":{"line":56,"column":49}},"29":{"start":{"line":57,"column":18},"end":{"line":57,"column":74}},"30":{"start":{"line":58,"column":20},"end":{"line":58,"column":28}},"31":{"start":{"line":60,"column":19},"end":{"line":60,"column":81}},"32":{"start":{"line":60,"column":49},"end":{"line":60,"column":80}},"33":{"start":{"line":62,"column":4},"end":{"line":95,"column":5}},"34":{"start":{"line":63,"column":20},"end":{"line":63,"column":22}},"35":{"start":{"line":65,"column":6},"end":{"line":92,"column":7}},"36":{"start":{"line":69,"column":10},"end":{"line":69,"column":29}},"37":{"start":{"line":70,"column":10},"end":{"line":73,"column":12}},"38":{"start":{"line":74,"column":10},"end":{"line":74,"column":16}},"39":{"start":{"line":77,"column":10},"end":{"line":85,"column":12}},"40":{"start":{"line":86,"column":10},"end":{"line":86,"column":16}},"41":{"start":{"line":89,"column":10},"end":{"line":91,"column":12}},"42":{"start":{"line":94,"column":6},"end":{"line":94,"column":57}},"43":{"start":{"line":94,"column":42},"end":{"line":94,"column":57}},"44":{"start":{"line":97,"column":4},"end":{"line":97,"column":17}},"45":{"start":{"line":102,"column":0},"end":{"line":102,"column":25}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"_defineProperty","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":24}},"loc":{"start":{"line":12,"column":42},"end":{"line":12,"column":209}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":16},"end":{"line":48,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":38},"end":{"line":16,"column":39}},"loc":{"start":{"line":16,"column":59},"end":{"line":42,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":46},"end":{"line":25,"column":47}},"loc":{"start":{"line":25,"column":51},"end":{"line":25,"column":60}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":21},"end":{"line":53,"column":3}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":32},"end":{"line":98,"column":3}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":40},"end":{"line":60,"column":41}},"loc":{"start":{"line":60,"column":49},"end":{"line":60,"column":80}},"line":60}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10},"2":{"loc":{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},"type":"if","locations":[{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},{"start":{"line":12,"column":44},"end":{"line":12,"column":195}}],"line":12},"3":{"loc":{"start":{"line":17,"column":6},"end":{"line":38,"column":7}},"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":38,"column":7}},{"start":{"line":17,"column":6},"end":{"line":38,"column":7}}],"line":17},"4":{"loc":{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},{"start":{"line":24,"column":8},"end":{"line":30,"column":9}}],"line":24},"5":{"loc":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},{"start":{"line":32,"column":8},"end":{"line":35,"column":9}}],"line":32},"6":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":104}},"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":42}},{"start":{"line":32,"column":46},"end":{"line":32,"column":104}}],"line":32},"7":{"loc":{"start":{"line":57,"column":18},"end":{"line":57,"column":74}},"type":"cond-expr","locations":[{"start":{"line":57,"column":53},"end":{"line":57,"column":69}},{"start":{"line":57,"column":72},"end":{"line":57,"column":74}}],"line":57},"8":{"loc":{"start":{"line":62,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":95,"column":5}},{"start":{"line":62,"column":4},"end":{"line":95,"column":5}}],"line":62},"9":{"loc":{"start":{"line":65,"column":6},"end":{"line":92,"column":7}},"type":"switch","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":25}},{"start":{"line":67,"column":8},"end":{"line":67,"column":24}},{"start":{"line":68,"column":8},"end":{"line":74,"column":16}},{"start":{"line":76,"column":8},"end":{"line":86,"column":16}},{"start":{"line":88,"column":8},"end":{"line":91,"column":12}}],"line":65},"10":{"loc":{"start":{"line":83,"column":23},"end":{"line":83,"column":47}},"type":"cond-expr","locations":[{"start":{"line":83,"column":34},"end":{"line":83,"column":42}},{"start":{"line":83,"column":45},"end":{"line":83,"column":47}}],"line":83},"11":{"loc":{"start":{"line":94,"column":6},"end":{"line":94,"column":57}},"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":57}},{"start":{"line":94,"column":6},"end":{"line":94,"column":57}}],"line":94}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":3,"10":3,"11":3,"12":0,"13":0,"14":0,"15":0,"16":3,"17":0,"18":0,"19":3,"20":0,"21":0,"22":1,"23":1,"24":1,"25":1,"26":3,"27":3,"28":3,"29":3,"30":3,"31":3,"32":4,"33":3,"34":3,"35":3,"36":2,"37":2,"38":2,"39":1,"40":1,"41":0,"42":3,"43":3,"44":0,"45":1},"f":{"0":1,"1":1,"2":1,"3":3,"4":0,"5":3,"6":3,"7":4},"b":{"0":[1,0],"1":[1,1],"2":[0,1],"3":[3,0],"4":[0,3],"5":[0,3],"6":[3,1,1],"7":[3,0],"8":[3,0],"9":[2,2,2,1,0],"10":[0,1],"11":[3,0]},"inputSourceMap":{"version":3,"sources":["parser.js"],"names":["Parser","constructor","request","schema","error","protocol","validate","abortEarly","errorList","details","map","x","message","console","JSON","stringify","errors","value","bytes","parseInt","length","command","options","data","bytesRemaining","translate","commandLine","dataBlock","toString","split","parse","words","trim","Models","find","model","methods","includes","group","splice","keys","key","flags","exptime","uniqueCas"],"mappings":"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","sourceRoot":"/Users/esteban/node-memcached/server/src/","sourcesContent":["import Models from './models';\n\nexport default class Parser {\n    constructor() {\n        this.command = null;\n        this.options = null;\n        this.data = '';\n        this.bytesRemaining = 0;\n    }\n\n    translate(message) {\n        const [commandLine, dataBlock] = message.toString('utf8').split('\\r\\n');\n        return this.parse(commandLine, dataBlock);\n    }\n\n    parse(commandLine, dataBlock) {\n        const words = commandLine.trim().split(/\\s+/);\n        const value = typeof dataBlock !== 'undefined' ? dataBlock.trim() : '';\n        const command = words[0];\n        const schema = Models.find((model) => model.methods.includes(command));\n        if (schema) {\n            let request = {};\n            switch (schema.group) {\n            case 'retrieval':\n            case 'deletion':\n            default:\n                words.splice(0, 1);\n                request = { command, keys: words };\n                break;\n            case 'storage':\n                request = {\n                    command, key: words[1], flags: words[2], exptime: words[3], bytes: words[4], uniqueCas: (words[5] ? words[5] : ''), value,\n                };\n                break;\n            case 'statistics':\n                request = { command };\n            }\n            if (this.validate(request, schema)) return request;\n        }\n        return false;\n    }\n\n    validate = (request, schema) => {\n        if (schema) {\n            const { error } = schema.protocol.validate(request, { abortEarly: false });\n            if (error) {\n                const errorList = error.details.map((x) => x.message);\n                console.error(JSON.stringify({ errors: errorList }));\n                return false;\n            }\n            if (request.value && request.bytes && parseInt(request.value.length) !== parseInt(request.bytes)) {\n                console.error(`Bytes parameter passed: ${request.bytes} not compatible with actual value of length: ${request.value.length}`);\n                return false;\n            }\n            return true;\n        }\n        console.error(`Command not supported: ${request.command}`);\n        return false;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e7f7aebbc9a39fdfa7feb1f568acee4bd89b9344","contentHash":"81c9ee4b30dbcab3a75acce51acab4ca4db779abb263802c3ead3be86c1bf5ec"},"/Users/esteban/node-memcached/server/src/models.js":{"path":"/Users/esteban/node-memcached/server/src/models.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":49}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":64,"column":2}},"5":{"start":{"line":65,"column":15},"end":{"line":65,"column":21}},"6":{"start":{"line":66,"column":0},"end":{"line":66,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["models.js"],"names":["Models","group","methods","protocol","Joi","object","command","string","required","keys","array","output","null","key","flags","number","exptime","default","bytes","value","allow","uniqueCas","order","true","false","items"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAM,GAAG,CACX;AACIC,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,OAAO,EAAE,CACL,KADK,EAEL,MAFK,CAFb;AAMIC,EAAAA,QAAQ,EAAEC,aAAIC,MAAJ,CAAW;AACjBC,IAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,QAAb,EADQ;AAEjBC,IAAAA,IAAI,EAAEL,aAAIM,KAAJ,GAAYF,QAAZ;AAFW,GAAX,CANd;AAUIG,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AAVZ,CADW,EAeX;AACIX,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,OAAO,EAAE,CACL,KADK,EAEL,KAFK,EAGL,SAHK,EAIL,QAJK,EAKL,SALK,EAML,KANK,CAFb;AAUIC,EAAAA,QAAQ,EAAEC,aAAIC,MAAJ,CAAW;AACjBC,IAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,QAAb,EADQ;AAEjBK,IAAAA,GAAG,EAAET,aAAIG,MAAJ,GAAaC,QAAb,EAFY;AAGjBM,IAAAA,KAAK,EAAEV,aAAIW,MAAJ,GAAaP,QAAb,EAHU;AAIjBQ,IAAAA,OAAO,EAAEZ,aAAIW,MAAJ,GAAaP,QAAb,GAAwBS,OAAxB,CAAgC,CAAhC,CAJQ;AAKjBC,IAAAA,KAAK,EAAEd,aAAIW,MAAJ,GAAaP,QAAb,EALU;AAMjBW,IAAAA,KAAK,EAAEf,aAAIG,MAAJ,GAAaC,QAAb,GAAwBY,KAAxB,CAA8B,EAA9B,CANU;AAOjBC,IAAAA,SAAS,EAAEjB,aAAIW,MAAJ,GAAaK,KAAb,CAAmB,EAAnB;AAPM,GAAX,CAVd;AAmBIE,EAAAA,KAAK,EAAE;AACHT,IAAAA,GAAG,EAAE,IADF;AAEHM,IAAAA,KAAK,EAAE,IAFJ;AAGHH,IAAAA,OAAO,EAAE,IAHN;AAIHF,IAAAA,KAAK,EAAE;AAJJ,GAnBX;AAyBIH,EAAAA,MAAM,EAAE;AACJY,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAzBZ,CAfW,EA6CX;AACIvB,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,OAAO,EAAE,CAAC,QAAD,CAFb;AAGIC,EAAAA,QAAQ,EAAEC,aAAIC,MAAJ,CAAW;AACjBC,IAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,QAAb,EADQ;AAEjBC,IAAAA,IAAI,EAAEL,aAAIM,KAAJ,GAAYe,KAAZ,CAAkBrB,aAAIG,MAAJ,EAAlB,EAAgCC,QAAhC;AAFW,GAAX,CAHd;AAOIG,EAAAA,MAAM,EAAE;AACJY,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAPZ,CA7CW,EAyDX;AACIvB,EAAAA,KAAK,EAAE,YADX;AAEIC,EAAAA,OAAO,EAAE,CAAC,OAAD,CAFb;AAGIC,EAAAA,QAAQ,EAAEC,aAAIC,MAAJ,CAAW;AACjBC,IAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,QAAb;AADQ,GAAX,CAHd;AAMIG,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AANZ,CAzDW,CAAf;eAqEeZ,M","sourceRoot":"/Users/esteban/node-memcached/server/src/","sourcesContent":["import Joi from 'joi';\n\nconst Models = [\n    {\n        group: 'retrieval',\n        methods: [\n            'get',\n            'gets',\n        ],\n        protocol: Joi.object({\n            command: Joi.string().required(),\n            keys: Joi.array().required(),\n        }),\n        output: {\n            null: 'END',\n        },\n    },\n    {\n        group: 'storage',\n        methods: [\n            'set',\n            'add',\n            'replace',\n            'append',\n            'prepend',\n            'cas',\n        ],\n        protocol: Joi.object({\n            command: Joi.string().required(),\n            key: Joi.string().required(),\n            flags: Joi.number().required(),\n            exptime: Joi.number().required().default(0),\n            bytes: Joi.number().required(),\n            value: Joi.string().required().allow(''),\n            uniqueCas: Joi.number().allow(''),\n        }),\n        order: {\n            key: true,\n            value: true,\n            exptime: true,\n            flags: true,\n        },\n        output: {\n            true: 'STORED',\n            false: 'NOT_STORED',\n        },\n    },\n    {\n        group: 'deletion',\n        methods: ['delete'],\n        protocol: Joi.object({\n            command: Joi.string().required(),\n            keys: Joi.array().items(Joi.string()).required(),\n        }),\n        output: {\n            true: 'DELETED',\n            false: 'NOT_FOUND',\n        },\n    },\n    {\n        group: 'statistics',\n        methods: ['stats'],\n        protocol: Joi.object({\n            command: Joi.string().required(),\n        }),\n        output: {\n            null: 'END',\n        },\n    },\n];\n\nexport default Models;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b2929080430bd2541885341219d169a3a4009c13","contentHash":"17fbca84914bc2f2abef2542c4fd739cfd37774f7d2b652766be6269e17eb0e0"},"/Users/esteban/node-memcached/server/src/cache.js":{"path":"/Users/esteban/node-memcached/server/src/cache.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":29}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":48}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"9":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":19}},"11":{"start":{"line":27,"column":19},"end":{"line":27,"column":40}},"12":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"13":{"start":{"line":30,"column":6},"end":{"line":30,"column":19}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":40}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},"17":{"start":{"line":38,"column":29},"end":{"line":38,"column":42}},"18":{"start":{"line":39,"column":19},"end":{"line":39,"column":40}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":78}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":40}},"21":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"22":{"start":{"line":45,"column":29},"end":{"line":45,"column":42}},"23":{"start":{"line":46,"column":19},"end":{"line":46,"column":40}},"24":{"start":{"line":47,"column":4},"end":{"line":47,"column":98}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":40}},"26":{"start":{"line":52,"column":19},"end":{"line":52,"column":61}},"27":{"start":{"line":53,"column":4},"end":{"line":53,"column":34}},"28":{"start":{"line":54,"column":4},"end":{"line":54,"column":41}},"29":{"start":{"line":54,"column":27},"end":{"line":54,"column":39}},"30":{"start":{"line":55,"column":4},"end":{"line":55,"column":42}},"31":{"start":{"line":56,"column":4},"end":{"line":56,"column":20}},"32":{"start":{"line":60,"column":4},"end":{"line":60,"column":40}},"33":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"34":{"start":{"line":63,"column":6},"end":{"line":63,"column":50}},"35":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"36":{"start":{"line":70,"column":4},"end":{"line":70,"column":44}},"37":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"38":{"start":{"line":73,"column":21},"end":{"line":73,"column":34}},"39":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"40":{"start":{"line":75,"column":6},"end":{"line":75,"column":31}},"41":{"start":{"line":76,"column":6},"end":{"line":76,"column":27}},"42":{"start":{"line":77,"column":6},"end":{"line":77,"column":25}},"43":{"start":{"line":78,"column":6},"end":{"line":78,"column":28}},"44":{"start":{"line":79,"column":6},"end":{"line":79,"column":22}},"45":{"start":{"line":82,"column":4},"end":{"line":82,"column":24}},"46":{"start":{"line":86,"column":4},"end":{"line":86,"column":43}},"47":{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},"48":{"start":{"line":89,"column":21},"end":{"line":89,"column":34}},"49":{"start":{"line":90,"column":6},"end":{"line":90,"column":47}},"50":{"start":{"line":91,"column":6},"end":{"line":91,"column":31}},"51":{"start":{"line":92,"column":6},"end":{"line":92,"column":27}},"52":{"start":{"line":93,"column":6},"end":{"line":93,"column":25}},"53":{"start":{"line":94,"column":6},"end":{"line":94,"column":28}},"54":{"start":{"line":95,"column":6},"end":{"line":95,"column":22}},"55":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"56":{"start":{"line":102,"column":4},"end":{"line":102,"column":44}},"57":{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},"58":{"start":{"line":105,"column":21},"end":{"line":105,"column":34}},"59":{"start":{"line":106,"column":6},"end":{"line":106,"column":47}},"60":{"start":{"line":107,"column":6},"end":{"line":107,"column":31}},"61":{"start":{"line":108,"column":6},"end":{"line":108,"column":27}},"62":{"start":{"line":109,"column":6},"end":{"line":109,"column":25}},"63":{"start":{"line":110,"column":6},"end":{"line":110,"column":28}},"64":{"start":{"line":111,"column":6},"end":{"line":111,"column":22}},"65":{"start":{"line":114,"column":4},"end":{"line":114,"column":24}},"66":{"start":{"line":118,"column":26},"end":{"line":118,"column":47}},"67":{"start":{"line":120,"column":4},"end":{"line":126,"column":5}},"68":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"69":{"start":{"line":122,"column":8},"end":{"line":122,"column":56}},"70":{"start":{"line":125,"column":6},"end":{"line":125,"column":22}},"71":{"start":{"line":128,"column":4},"end":{"line":128,"column":23}},"72":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"73":{"start":{"line":133,"column":6},"end":{"line":133,"column":25}},"74":{"start":{"line":136,"column":4},"end":{"line":136,"column":29}},"75":{"start":{"line":137,"column":4},"end":{"line":137,"column":41}},"76":{"start":{"line":137,"column":27},"end":{"line":137,"column":39}},"77":{"start":{"line":138,"column":4},"end":{"line":138,"column":42}},"78":{"start":{"line":139,"column":4},"end":{"line":139,"column":21}},"79":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"80":{"start":{"line":144,"column":6},"end":{"line":144,"column":26}},"81":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"82":{"start":{"line":148,"column":6},"end":{"line":148,"column":25}},"83":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"84":{"start":{"line":154,"column":6},"end":{"line":154,"column":13}},"85":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"86":{"start":{"line":158,"column":6},"end":{"line":158,"column":31}},"87":{"start":{"line":159,"column":6},"end":{"line":159,"column":54}},"88":{"start":{"line":159,"column":47},"end":{"line":159,"column":54}},"89":{"start":{"line":164,"column":4},"end":{"line":164,"column":62}},"90":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"91":{"start":{"line":167,"column":6},"end":{"line":167,"column":13}},"92":{"start":{"line":170,"column":4},"end":{"line":170,"column":85}},"93":{"start":{"line":172,"column":4},"end":{"line":176,"column":5}},"94":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"95":{"start":{"line":174,"column":8},"end":{"line":174,"column":33}},"96":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"97":{"start":{"line":179,"column":6},"end":{"line":179,"column":13}},"98":{"start":{"line":182,"column":4},"end":{"line":185,"column":5}},"99":{"start":{"line":183,"column":6},"end":{"line":183,"column":31}},"100":{"start":{"line":184,"column":6},"end":{"line":184,"column":53}},"101":{"start":{"line":184,"column":46},"end":{"line":184,"column":53}},"102":{"start":{"line":189,"column":4},"end":{"line":189,"column":62}},"103":{"start":{"line":190,"column":4},"end":{"line":195,"column":6}},"104":{"start":{"line":200,"column":0},"end":{"line":200,"column":24}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":2},"end":{"line":14,"column":3}},"loc":{"start":{"line":14,"column":28},"end":{"line":20,"column":3}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":2},"end":{"line":22,"column":3}},"loc":{"start":{"line":22,"column":16},"end":{"line":34,"column":3}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":11},"end":{"line":41,"column":3}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":12},"end":{"line":48,"column":3}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":34},"end":{"line":57,"column":3}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":21},"end":{"line":54,"column":22}},"loc":{"start":{"line":54,"column":27},"end":{"line":54,"column":39}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":34},"end":{"line":67,"column":3}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":69,"column":38},"end":{"line":83,"column":3}},"line":69},"9":{"name":"(anonymous_9)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":37},"end":{"line":99,"column":3}},"line":85},"10":{"name":"(anonymous_10)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":38},"end":{"line":115,"column":3}},"line":101},"11":{"name":"(anonymous_11)","decl":{"start":{"line":117,"column":2},"end":{"line":117,"column":3}},"loc":{"start":{"line":117,"column":45},"end":{"line":129,"column":3}},"line":117},"12":{"name":"(anonymous_12)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":14},"end":{"line":140,"column":3}},"line":131},"13":{"name":"(anonymous_13)","decl":{"start":{"line":137,"column":21},"end":{"line":137,"column":22}},"loc":{"start":{"line":137,"column":27},"end":{"line":137,"column":39}},"line":137},"14":{"name":"(anonymous_14)","decl":{"start":{"line":142,"column":2},"end":{"line":142,"column":3}},"loc":{"start":{"line":142,"column":10},"end":{"line":150,"column":3}},"line":142},"15":{"name":"(anonymous_15)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":17},"end":{"line":161,"column":3}},"line":152},"16":{"name":"(anonymous_16)","decl":{"start":{"line":163,"column":2},"end":{"line":163,"column":3}},"loc":{"start":{"line":163,"column":16},"end":{"line":186,"column":3}},"line":163},"17":{"name":"(anonymous_17)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":10},"end":{"line":196,"column":3}},"line":188}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10},"2":{"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":26}},"type":"default-arg","locations":[{"start":{"line":14,"column":24},"end":{"line":14,"column":26}}],"line":14},"3":{"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":47}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":40}},{"start":{"line":16,"column":44},"end":{"line":16,"column":47}}],"line":16},"4":{"loc":{"start":{"line":18,"column":22},"end":{"line":18,"column":48}},"type":"binary-expr","locations":[{"start":{"line":18,"column":22},"end":{"line":18,"column":40}},{"start":{"line":18,"column":44},"end":{"line":18,"column":48}}],"line":18},"5":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"6":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"7":{"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},{"start":{"line":38,"column":4},"end":{"line":38,"column":42}}],"line":38},"8":{"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},{"start":{"line":45,"column":4},"end":{"line":45,"column":42}}],"line":45},"9":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{"line":62,"column":4},"end":{"line":64,"column":5}}],"line":62},"10":{"loc":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},{"start":{"line":72,"column":4},"end":{"line":80,"column":5}}],"line":72},"11":{"loc":{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},{"start":{"line":88,"column":4},"end":{"line":96,"column":5}}],"line":88},"12":{"loc":{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},{"start":{"line":104,"column":4},"end":{"line":112,"column":5}}],"line":104},"13":{"loc":{"start":{"line":120,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":126,"column":5}},{"start":{"line":120,"column":4},"end":{"line":126,"column":5}}],"line":120},"14":{"loc":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},{"start":{"line":121,"column":6},"end":{"line":123,"column":7}}],"line":121},"15":{"loc":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},{"start":{"line":132,"column":4},"end":{"line":134,"column":5}}],"line":132},"16":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{"line":143,"column":4},"end":{"line":145,"column":5}}],"line":143},"17":{"loc":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},{"start":{"line":147,"column":4},"end":{"line":149,"column":5}}],"line":147},"18":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{"line":153,"column":4},"end":{"line":155,"column":5}}],"line":153},"19":{"loc":{"start":{"line":159,"column":6},"end":{"line":159,"column":54}},"type":"if","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":54}},{"start":{"line":159,"column":6},"end":{"line":159,"column":54}}],"line":159},"20":{"loc":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},{"start":{"line":166,"column":4},"end":{"line":168,"column":5}}],"line":166},"21":{"loc":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},{"start":{"line":173,"column":6},"end":{"line":175,"column":7}}],"line":173},"22":{"loc":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},{"start":{"line":178,"column":4},"end":{"line":180,"column":5}}],"line":178},"23":{"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":53}},"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":53}},{"start":{"line":184,"column":6},"end":{"line":184,"column":53}}],"line":184}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":0,"11":2,"12":2,"13":0,"14":2,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":1,"82":0,"83":1,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1},"f":{"0":1,"1":1,"2":2,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0},"b":{"0":[1,0],"1":[1,1],"2":[1],"3":[1,1],"4":[1,1],"5":[0,2],"6":[0,2],"7":[0,1],"8":[0,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1,0],"17":[0,1],"18":[1,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"inputSourceMap":{"version":3,"sources":["cache.js"],"names":["Cache","constructor","options","records","Map","maxMemoryMB","maxMemory","usedMemory","maxRecords","totalRecords","contains","key","has","record","get","isValid","console","debug","flags","length","value","gets","uniqueCas","set","exptime","Record","process","nextTick","purge","size","add","replace","append","prepend","cas","currentRecord","delete","purgeRecords","maxSizeMb","purgeMemory","keys","memoryUsage","rss","info","stats","MemoryUsage","TotalRecords","MaxMemoryMB"],"mappings":"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","sourceRoot":"/Users/esteban/node-memcached/server/src/","sourcesContent":["/* eslint-disable guard-for-in */\nimport Record from './record';\n\nexport default class Cache {\n    constructor(options = {}) {\n        this.records = new Map();\n        this.maxMemoryMB = options.maxMemory || 100;\n        this.usedMemory = 0;\n        this.maxRecords = options.maxRecords || 5000;\n        this.totalRecords = 0;\n    }\n\n    contains(key) {\n        if (!this.records.has(key)) {\n            return false;\n        }\n        const record = this.records.get(key);\n        if (!record.isValid()) {\n            return false;\n        }\n        return true;\n    }\n\n    get(key) {\n        console.debug('Enter get function');\n        if (!this.contains(key)) return 'END';\n        const record = this.records.get(key);\n        return `VALUE ${key} ${record.flags} ${record.length}\\r\\n${record.value}`;\n    }\n\n    gets(key) {\n        console.debug('Enter get function');\n        if (!this.contains(key)) return 'END';\n        const record = this.records.get(key);\n        return `VALUE ${key} ${record.flags} ${record.length} ${record.uniqueCas}\\r\\n${record.value}`;\n    }\n\n    set(key, value, exptime, flags) {\n        console.debug('Enter set function');\n        const record = new Record(value, exptime, flags);\n        this.records.set(key, record);\n        process.nextTick(() => this.purge());\n        this.totalRecords = this.records.size;\n        return 'STORED';\n    }\n\n    add(key, value, exptime, flags) {\n        console.debug('Enter add function');\n        if (!this.contains(key)) {\n            return this.set(key, value, exptime, flags);\n        } return 'NOT_STORED';\n    }\n\n    replace(key, value, exptime, flags) {\n        console.debug('Enter replace function');\n        if (this.contains(key)) {\n            const record = this.get(key);\n            record.value = value;\n            record.exptime = exptime;\n            record.flags = flags;\n            record.uniqueCas++;\n            this.set(key, record);\n            return 'STORED';\n        } return 'NOT_STORED';\n    }\n\n    append(key, value, exptime, flags) {\n        console.debug('Enter append function');\n        if (this.contains(key)) {\n            const record = this.get(key);\n            record.value = `${record.value}${value}`;\n            record.exptime = exptime;\n            record.flags = flags;\n            record.uniqueCas++;\n            this.set(key, record);\n            return 'STORED';\n        } return 'NOT_STORED';\n    }\n\n    prepend(key, value, exptime, flags) {\n        console.debug('Enter prepend function');\n        if (this.contains(key)) {\n            const record = this.get(key);\n            record.value = `${value}${record.value}`;\n            record.exptime = exptime;\n            record.flags = flags;\n            record.uniqueCas++;\n            this.set(key, record);\n            return 'STORED';\n        } return 'NOT_STORED';\n    }\n\n    cas(key, value, exptime, flags, uniqueCas) {\n        const currentRecord = this.records.get(key);\n        if (this.contains(key)) {\n            if (currentRecord.uniqueCas === uniqueCas) {\n                return this.replace(key, value, exptime, flags);\n            } return 'EXISTS';\n        } return 'NOT_FOUND';\n    }\n\n    delete(key) {\n        if (!this.contains(key)) {\n            return 'NOT_FOUND';\n        }\n        this.records.delete(key);\n        process.nextTick(() => this.purge());\n        this.totalRecords = this.records.size;\n        return 'DELETED';\n    }\n\n    purge() {\n        if (this.maxRecords) {\n            this.purgeRecords();\n        }\n        if (this.maxSizeMb) {\n            this.purgeMemory();\n        }\n    }\n\n    purgeRecords() {\n        if (this.records.size < this.maxRecords) {\n            return;\n        }\n        for (const key in this.records.keys()) {\n            this.records.delete(key);\n            if (this.records.size < this.maxRecords) return;\n        }\n    }\n\n    purgeMemory() {\n        this.usedMemory = process.memoryUsage().rss / 1024 / 1024;\n        if (this.usedMemory < this.maxMemoryMB) {\n            return;\n        }\n        console.info('Memory used %s, max %s: purging', this.usedMemory, this.maxSizeMb);\n        for (const key in this.records.keys()) {\n            if (!this.records.get(key).isValid()) {\n                this.records.delete(key);\n            }\n        }\n        if (this.usedMemory < this.maxMemoryMB) {\n            return;\n        }\n        for (const key in this.records) {\n            this.records.delete(key);\n            if (this.usedMemory < this.maxMemoryMB) return;\n        }\n    }\n\n    stats() {\n        this.usedMemory = process.memoryUsage().rss / 1024 / 1024;\n        return {\n            MemoryUsage: this.usedMemory,\n            TotalRecords: this.totalRecords,\n            MaxMemoryMB: this.maxMemoryMB,\n            maxRecords: this.maxRecords,\n        };\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5c66d6a4ad0109da2fad6474f402832a9eca27f7","contentHash":"b4fa9aa3f1f6079b9992002def99496280e5ec048d8f7474151330cfca02bc22"},"/Users/esteban/node-memcached/server/src/record.js":{"path":"/Users/esteban/node-memcached/server/src/record.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":7,"column":30},"end":{"line":7,"column":47}},"3":{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":6},"end":{"line":14,"column":35}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":18}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":74}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":40}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":40},"end":{"line":21,"column":3}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":12},"end":{"line":37,"column":3}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},{"start":{"line":11,"column":4},"end":{"line":15,"column":5}}],"line":11},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":60}},"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},{"start":{"line":11,"column":26},"end":{"line":11,"column":60}}],"line":11},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1,"10":2,"11":0,"12":2,"13":2,"14":1},"f":{"0":1,"1":2},"b":{"0":[1,0],"1":[1,1],"2":[0,2]},"inputSourceMap":{"version":3,"sources":["record.js"],"names":["MAX_EXPIRATION_OFFSET","Record","constructor","value","expiration","flags","Date","now","uniqueCas","length","isValid","console","debug"],"mappings":";;;;;;AAAA,MAAMA,qBAAqB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,EAA7C;;AAEe,MAAMC,MAAN,CAAa;AACxBC,EAAAA,WAAW,CAACC,KAAD,EAAQC,UAAR,EAAoBC,KAApB,EAA2B;AAClC,QAAID,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAGJ,qBAAnC,EAA0D;AACtD,WAAKI,UAAL,GAAkBE,IAAI,CAACC,GAAL,KAAcH,UAAU,GAAG,IAA7C;AACH,KAFD,MAEO;AACH,WAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACD,SAAKI,SAAL,GAAiB,CAAjB;AACA,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKM,MAAL,GAAcN,KAAK,CAACM,MAApB;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIK,EAAAA,OAAO,GAAG;AACN,QAAI,CAAC,KAAKN,UAAV,EAAsB;AAClB,aAAO,IAAP;AACH;;AACDO,IAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCN,IAAI,CAACC,GAAL,EAAzC,EAAqD,KAAKH,UAA1D;AACA,WAAQE,IAAI,CAACC,GAAL,KAAa,KAAKH,UAA1B;AACH;;AAzBuB","sourceRoot":"/Users/esteban/node-memcached/server/src/","sourcesContent":["const MAX_EXPIRATION_OFFSET = 60 * 60 * 24 * 30;\n\nexport default class Record {\n    constructor(value, expiration, flags) {\n        if (expiration > 0 && expiration < MAX_EXPIRATION_OFFSET) {\n            this.expiration = Date.now() + (expiration * 1000);\n        } else {\n            this.expiration = expiration;\n        }\n        this.uniqueCas = 1;\n        this.value = value;\n        this.length = value.length;\n        this.flags = flags;\n    }\n\n    /**\n     * Determines a records validity based on expiration date.\n     * If 0 is passed as expiration, the record doesn't expire.\n     * Nonetheless it could be evicted if the memory is full.\n     * @returns Boolean\n     */\n    isValid() {\n        if (!this.expiration) {\n            return true;\n        }\n        console.debug('Now: %s, expiration: %s', Date.now(), this.expiration);\n        return (Date.now() < this.expiration);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac9eaaf328eb29502f8f79c551b135f810895c34","contentHash":"bc1bfbb6055f46d4a99e467b8e7d36f63e7fc847b311593161f1f46845df3906"}}